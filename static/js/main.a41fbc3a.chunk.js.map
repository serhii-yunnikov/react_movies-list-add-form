{"version":3,"sources":["types/Input.ts","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["Input","MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","useState","Math","random","toString","slice","id","touched","setToched","checkedValue","urlValue","pattern","RegExp","join","match","urlValidated","hasError","htmlFor","classNames","type","placeholder","event","onBlur","NewMovie","onAdd","count","setCount","imgUrlError","setImgUrlError","imdbUrlError","setImdbUrlError","titleValue","setTitleValue","descriptionValue","setDescriptionValue","imgUrlValue","setImgUrlValue","imdbUrlValue","setImdbUrlValue","imdbIdValue","setImdbIdValue","onChangeInput","target","classList","contains","newMovie","clearForm","current","onSubmit","disabled","App","moviesFromServer","newMoviesAdded","setNewMoviesAdded","clearFunction","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a41fbc3a.chunk.js","sourcesContent":["export enum Input {\n  title = 'title',\n  description = 'description',\n  imgUrl = 'imgUrl',\n  imdbUrl = 'imdbUrl',\n  imdbId = 'imdbId',\n}\n","import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Input } from '../../types/Input';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nconst urlValidated = (urlValue: string) => {\n  const pattern = new RegExp([\n    '^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)?[A-Za-z0-9.-]+',\n    '|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)',\n    '((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@,.\\\\w_]*)#?(?:[,.!/\\\\\\\\\\\\w]*))?)$',\n  ].join(''), 'g');\n\n  const filterValueArray = urlValue.match(pattern) || [''];\n\n  return filterValueArray[0];\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n\n  const checkedValue = (name === Input.imdbUrl\n    || name === Input.imgUrl)\n    ? urlValidated(value)\n    : value;\n\n  const hasError = touched && required && !checkedValue;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          name={name}\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event)}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable default-case */\nimport { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { Input } from '../../types/Input';\n\ntype Props = {\n  onAdd: (\n    newMovie: Movie,\n    event: React.FormEvent,\n    clearFunction: CallableFunction,\n  ) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [imgUrlError, setImgUrlError] = useState(false);\n  const [imdbUrlError, setImdbUrlError] = useState(false);\n  const [titleValue, setTitleValue] = useState('');\n  const [descriptionValue, setDescriptionValue] = useState('');\n  const [imgUrlValue, setImgUrlValue] = useState('');\n  const [imdbUrlValue, setImdbUrlValue] = useState('');\n  const [imdbIdValue, setImdbIdValue] = useState('');\n\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value, name, classList } = event.target;\n\n    switch (name) {\n      case Input.title:\n        setTitleValue(value);\n        break;\n      case Input.description:\n        setDescriptionValue(value);\n        break;\n      case Input.imgUrl:\n        setImgUrlError(classList.contains('is-danger'));\n        setImgUrlValue(value);\n        break;\n      case Input.imdbUrl:\n        setImdbUrlValue(value);\n        setImdbUrlError(classList.contains('is-danger'));\n        break;\n      case Input.imdbId:\n        setImdbIdValue(value);\n    }\n  };\n\n  const newMovie = {\n    title: titleValue,\n    description: descriptionValue,\n    imgUrl: imgUrlValue,\n    imdbUrl: imdbUrlValue,\n    imdbId: imdbIdValue,\n  };\n\n  const clearForm = () => {\n    setTitleValue('');\n    setDescriptionValue('');\n    setImgUrlValue('');\n    setImdbUrlValue('');\n    setImdbIdValue('');\n    setCount(current => current + 1);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={(event) => onAdd(newMovie, event, clearForm)}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={titleValue}\n        onChange={onChangeInput}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descriptionValue}\n        onChange={onChangeInput}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrlValue}\n        onChange={onChangeInput}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrlValue}\n        onChange={onChangeInput}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbIdValue}\n        onChange={onChangeInput}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={\n              !titleValue\n              || !imgUrlValue\n              || !imdbUrlValue\n              || !imdbIdValue\n              || imgUrlError\n              || imdbUrlError\n            }\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [newMoviesAdded, setNewMoviesAdded] = useState([...moviesFromServer]);\n\n  const addMovie = (\n    newMovie: Movie,\n    event: React.FormEvent<Element>,\n    clearFunction: CallableFunction,\n  ) => {\n    setNewMoviesAdded(current => [\n      ...current,\n      newMovie,\n    ]);\n\n    event.preventDefault();\n    clearFunction();\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={newMoviesAdded} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}